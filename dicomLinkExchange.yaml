openapi: 3.0.0

info:
  title: DLX API
  description: Prototype of the DICOM Link Exchange (DLX) initiative. The API represents the outcome of an initiative of medical imaging software manufactures to standardize downloads from their systems
  version: "0.9"

servers:
  - url: /dlx/
    description: Demo server
    
paths:
  /api_info:
    description: Provides information on version and implemented capabilities of the api
    get:    
      responses:
        "200":
          description: A json string representing information about the api
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiInfo'

  /token/{id}:
    description: Ihe initial call which accepts only the token (e.g. from a qr-code) and responds with the 2FA questions for the calling system to generate a JWT for all further requests. To enhance security, this call always returns successfully, even if the token id does not actually exist. The feedback about failed or successful authentication will be presented by the subsequent /tokentfa/{id} endpoint.
    get:
      parameters:
        - in: path
          name: id
          description: Token which identifies the download package, e.g. an alpha numerical code
          required: true
          schema:
            type: string 
      responses:
        "200":
          description: Returns the 2FA questions in JSON format. If the token does not exist, a default question scheme is returned, e.g. to query the date of birth.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tfaQuestions'
          
  /tokentfa/{id}:
    description: Request to answer the 2FA questions from the initial token call. The questions and answers are mapped by their IDs. 
    post:
      parameters:
        - in: path
          name: id
          description: Token which identifies the download package, e.g. an alpha numerical code
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/tfaAnswers'
        required: true    
      responses:
        "200":
          description: response with valid JWT 
          content:
            application/jwt:
              schema:
                type: string      
        "401":
          description: Authentication failed. Token does not exist or additional factors do not match.

  /list:
    description:  Returns a list of the metadata of all available medical data sets 
    get:
      security:
        - bearerAuth: []
      responses:
        "200":
          description: A list of medical data items
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dataList'    
        "401":
          $ref: '#/components/responses/invalidCredentials'     

  /download/{id}:
    description:  Downloads the file(s) of the data item for the given id
    get:
      security:
        - bearerAuth: []
      parameters:
        - $ref: "#/components/parameters/idParam"
      responses:
        "200":
          description: Returns the file of the data item as binary stream. If the data item contains multiple files (e.g. DICOM study), a zip file stream is returned
          content:
            application/octet-stream:
              schema:
                type: string
                format: binary
        "401":
          $ref: '#/components/responses/invalidCredentials'     
        "503":
          $ref: '#/components/responses/comebackLater'       
        "400":
          $ref: '#/components/responses/invalidStudyInstanceUID'    

  /download/all:
    description: Download all data sets
    get:
      security:
        - bearerAuth: []
      responses:
        "200":
          description: Returns all files of all data sets in a zip file stream
          content:
            application/zip:
              schema:
                type: string
                format: binary
        "401":
          $ref: '#/components/responses/invalidCredentials'     
        "503":
          $ref: '#/components/responses/comebackLater'       

components:

  securitySchemes:

    basicAuth:     # <-- arbitrary name for the security scheme
      type: http
      scheme: basic

    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT  # optional, for documentation purposes only

  schemas:
      
    apiInfo:
        type: object
        required:
          - dlxVersion
        properties:
          dlxVersion:
            type: string
          vendorInformation:
            type: string

    tfaQuestions:
      type: array
      items:
        type: object
        properties:
          question:
            type: string
          questionId:
            type: string
          questionType:
            type: string
            enum: [PAT_BIRTH_DATE, STUDY_DATE, KV_NUMBER, CUSTOM]
            description: |
              Format:
              * `PAT_BIRTH_DATE` - e.g. date from DICOM TAG 0010:0030
              * `STUDY_DATE` - e.g. date from DICOM TAGS 0008:0020
              * `KV_NUMBER` - as string
              * `CUSTOM` - any custom value which is not specified above        
          answerFormat:  
            type: string
            enum: [DATE, STRING]
            description: |
              Format:
              * `DATE` - date formated as YYYYMMDD
              * `STRING` - arbitrary string
    
    tfaAnswers:
      type: array
      items:
        type: object
        properties:
          questionId:
            type: string
          answer:
            type: string
          
    dataItem:
      type: object
      required:
        - id
        - mimeType
        - name
      properties:
        id:                 
          type: string
        mimeType:           # application/dicom, application/pdf, ...
          type: string
        studyInstanceUID:   # dicom: studyInstanceUID (0020,000D)
          type: string
        name:    # dicom: studyDescription (0008,1030)
          type: string
        date:               # dicom: studyDate (0008,0020)
          type: string
          format: date   
        modalities:         
          type: string  
        patientsSex:        # dicom: patientsSex (0010,0040)
          type: string   
        patientsName:       # dicom: patientsName (0010,0010)
          type: string
        patientsBirthdate:  # dicom: patientsBirthdate (0010,0030)
          type: string 
          format: date
        fileCount:
          type: integer 


    dataList:
      type: array
      items:
        $ref: '#/components/schemas/dataItem'

    comebackLaterResponse:
      type: object  
      nullable: true
      properties: 
        timeOutInSeconds:
          type: integer
          minimum: 0

  parameters:
    idParam:
      name: id
      in: path
      required: true
      schema:
        type: string
        minLength: 1

  responses:
    invalidCredentials:
          description: invalid credentials provided - use /token and /tokentfa before

    comebackLater:
        description: If the server is busy, a 503 status code means "please come back later"
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/comebackLaterResponse'      

    invalidStudyInstanceUID:
        description: If the study or report for the given StudyInstanceUID is unknown