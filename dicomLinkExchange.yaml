openapi: 3.0.0

info:
  title: DLX API
  description: Prototype of the DICOM Link Exchange (DLX) initiative. The API represents the outcome of an initiative of medical imaging software manufactures to standardize downloads from their systems
  version: 0.0.3

servers:
  - url: /
    description: Demo server
    
paths:
  /token/{id}:
    description: the initial call which accepts only the token (e.g. from a qr-code) and responds with the 2FA questions for the calling system to generate a JWT for all further requests
    get:
      parameters:
        - in: path
          name: id
          description: Token which identifies the download package
          required: true
          schema:
            type: string 
      responses:
        "200":
          description: Returns the 2FA questions in JSON format
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tfaQuestions'
        "404":
          description: Token does not exist or is invalide
        "5XX":
          description: Unexpected server error

  /login:
    description: the initial login process which uses HTTP basic auth. The username / password could be the user code and birth date.
    get:    
      security:
        - basicAuth: []
      responses:
        "200":
          description: response with valid JWT or, if /logintfa is required, preliminary JWT for further authentication
          content:
            application/jwt:
              schema:
                type: string        
        "401":
          description: invalid credentials provided

  /api-info:
    description: provides information on implemented capabilities of the api which is important to know for the caller
    get:    
      security:
        - bearerAuth: []
      responses:
        "200":
          description: a json string representing information on the api
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiInfo' 
        "401":
          $ref: '#/components/responses/invalidCredentialsFirstStage'   

  /logintfa:
    description: must be called if /api-info provides tfaNeeded = true. Will return a new jwt if the second factor is valid
    post:
      security:
        - bearerAuth: []
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/tfa'
        required: true
      responses:
        "200":
          description: a new JWT for all subsequent calls
          content:
            application/jwt:
              schema:
                type: string        
        "401":
          $ref: '#/components/responses/invalidCredentialsFirstStage'   

  /list:
    description:  Returns a list of the metadata of all available medical data sets 
    get:
      security:
        - bearerAuth: []
      responses:
        "200":
          description: a list of study descriptions
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dataList'    
        "401":
          $ref: '#/components/responses/invalidCredentialsSecondStage'     

  /download/{uid}:
    description:  Downloads the study for the given studyInstanceUID as zip file
    get:
      security:
        - bearerAuth: []
      parameters:
        - $ref: "#/components/parameters/studyInstanceUIDParam"
      responses:
        "200":
          description: All relevant (DICOM) files of the study contained in a zip file stream
          content:
            application/zip:
              schema:
                type: string
                format: binary
        "401":
          $ref: '#/components/responses/invalidCredentialsSecondStage'     
        "503":
          $ref: '#/components/responses/comebackLater'       
        "400":
          $ref: '#/components/responses/invalidStudyInstanceUID'        

  /download/report/{uid}:
    description:  Downloads only the report(s) for the given study (denoted by its studyInstanceUID) as zip file
    get:
      security:
        - bearerAuth: []
      parameters:
        - $ref: "#/components/parameters/studyInstanceUIDParam"
      responses:
        "200":
          description: The report files of the study contained in a zip file stream
          content:
            application/zip:
              schema:
                type: string
                format: binary
        "401":
          $ref: '#/components/responses/invalidCredentialsSecondStage'     
        "503":
          $ref: '#/components/responses/comebackLater'      
        "400":
          $ref: '#/components/responses/invalidStudyInstanceUID'        

  /download/all:
    description: download all studies and reports of an account
    get:
      security:
        - bearerAuth: []
      responses:
        "200":
          description: All image and report files of all studies of the account contained in a zip file stream
          content:
            application/zip:
              schema:
                type: string
                format: binary
        "401":
          $ref: '#/components/responses/invalidCredentialsSecondStage'     
        "503":
          $ref: '#/components/responses/comebackLater'       

components:

  securitySchemes:

    basicAuth:     # <-- arbitrary name for the security scheme
      type: http
      scheme: basic

    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT  # optional, for documentation purposes only

  schemas:

    tfaQuestions:
      type: array
      items:
        type: object
        properties:
          question:
            type: string
          answerFormat:  
            type: string
            enum: [date, string, int]
            description: |
              Format:
              * `date` - date formated as YYYYMMDD
              * `string` - arbitrary string
              * `int` - Integer number

    apiInfo:
      type: object
      properties:
        tfaNeeded:
          type: boolean
        tfaDescription:
          type: string
        hasEncryptedZipContents:
          type: boolean
        encryptedZipContentsDescription:
          type: string

    tfa:
      type: object
      properties:
        tfaValue:
          type: string
          
    dataItem:
      type: object
      required:
        - mimeType
        - uid
        - dataDescription
      properties:
        mimeType:           # application/dicom, application/pdf, ...
          type: string
        uid:                # dicom: studyInstanceUID (0020,000D)
          type: string
        dataDescription:    # dicom: studyDescription (0008,1030)
          type: string
        date:               # dicom: studyDate (0008,0020)
          type: string
          format: date   
        modalities:         
          type: string  
        patientsSex:        # dicom: patientsSex (0010,0040)
          type: string   
        patientsName:       # dicom: patientsName (0010,0010)
          type: string
        patientsBirthdate:  # dicom: patientsBirthdate (0010,0030)
          type: string 
          format: date
        fileCount:
          type: integer 
        reportAvailable:
          type: boolean

    dataList:
      type: array
      items:
        $ref: '#/components/schemas/dataItem'

    comebackLaterResponse:
      type: object  
      nullable: true
      properties: 
        timeOutInSeconds:
          type: integer
          minimum: 0

  parameters:
    studyInstanceUIDParam:
      name: uid
      in: path
      required: true
      schema:
        type: string
        minLength: 1

  responses:
    invalidCredentialsFirstStage:
          description: invalid credentials provided (use /login before)

    invalidCredentialsSecondStage:
          description: invalid credentials provided - use /login (and possibly /logintfa) before

    comebackLater:
        description: If the server is busy, a 503 status code means "please come back later"
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/comebackLaterResponse'      

    invalidStudyInstanceUID:
        description: If the study or report for the given StudyInstanceUID is unknown