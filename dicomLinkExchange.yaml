openapi: 3.0.0

info:
  title: DLX API
  description: Prototype of the DICOM Link Exchange (DLX) initiative. The API represents the outcome of an initiative of medical imaging software manufactures to standardize downloads from their systems.
  version: "1.0"

servers:
  - url: /dlx/v1
    description: Demo server

paths:
  /api_info:
    description: Provides information on version and implemented capabilities of the API.
    get:
      responses:
        "200":
          description: A JSON string representing information about the API.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiInfo'

  /token/{value}:
    description: The initial call which accepts only the token (e.g. from a link or QR code) and responds with the TFA questions for the calling system to generate a JWT for all further requests. To enhance security, this call always returns successfully, even if the token value does not actually exist. The feedback on failed or successful authentication is provided by the subsequent /tokentfa/{value} endpoint. To enable the DLX functionalities the HTTP header parameter X-DICOM-LINK-EXCHANGE is required. This allowes pre-existing token URLs to forward to this API endpoint (e.g. https://example.com/portal?token={value} with a HTTP header X-DICOM-LINK-EXCHANGE should return the same result as the defined DLX endpoint https://example.com/dlx/v1/token/{value}) .
    get:
      parameters:
        - in: header
          name: X-DICOM-LINK-EXCHANGE # optional, and used to activate the DLX API functionality
          schema: 
            type: string # header must exist but value is not evaluated
        - in: path
          name: value
          description: Token value which identifies the download package, e.g. an alpha numerical code like ABC-S1Z-98A.
          required: true
          schema:
            type: string 
      responses:
        "200":
          description: Returns the two-factor authentification (TFA) questions in JSON format. If the token value does not exist, a default question scheme MUST be returned, e.g. to query the date of birth, which always returns a negative result.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tfaQuestions'

  /tokentfa/{value}:
    description: Request to answer the TFA questions from the initial token call. The questions and answers are mapped by their questionId. 
    post:
      parameters:
        - in: path
          name: value
          description: Token value which identifies the download package, e.g. an alpha numerical code like ABC-S1Z-98A.
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/tfaAnswers'
        required: true
      responses:
        "200":
          description: Response with a valid JWT.
          content:
            application/jwt:
              schema:
                type: string
        "401":
          description: Authentication failed. Token does not exist or additional factors do not match.
        "403":
          description: Authentication failed. Token expired but additional factors match. All other errors should result in error code 401.

  /list:
    description: Returns a list of the metadata of all available medical data items.
    get:
      security:
        - bearerAuth: []
      responses:
        "200":
          description: A list of medical data items.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dataItems'
        "401":
          $ref: '#/components/responses/invalidCredentials'

  /download/{id}:
    description: Returns the data item for the given id with the specified mimeType.
    get:
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          description: ID, which identifies the data item.
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Returns the referenced data item as binary stream with the specified mimeType (e.g. application/pdf). If the data item contains multiple files resp. a DICOM study, a ZIP file stream is returned. DICOM studies MUST always conform to IHE PDI in ZIP format.
          content:
            application/octet-stream:
              schema:
                type: string
                format: binary
        "400":
          $ref: '#/components/responses/invalidDataItemId'
        "401":
          $ref: '#/components/responses/invalidCredentials'
        "503":
          $ref: '#/components/responses/comebackLater'

  /downloadall:
    description: Returns all data items as ZIP container in IHE PDI format.
    get:
      security:
        - bearerAuth: []
      responses:
        "200":
          description: Returns all data items in a ZIP file stream. The download MUST conform to the IHE PID in ZIP format.
          content:
            application/zip:
              schema:
                type: string
                format: binary
        "401":
          $ref: '#/components/responses/invalidCredentials'
        "503":
          $ref: '#/components/responses/comebackLater'

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT  # optional, for documentation purposes only

  schemas:
    apiInfo:
      description: General information about the API and version.
      type: object
      required:
        - dlxVersion
        - apiBasePath
      properties:
          dlxVersion:
              type: string
          vendorInformation:
              type: string
          apiBasePath:
              type: string
      example:
          dlxVersion: v1
          vendorInformation: DLX Company Ltd.
          apiBasePath: https://example.com/portal/dlx/v1

    tfaQuestions:
      description: Information about the API and list of tfa questions.
      type: object
      properties: 
        apiInfo:
          type: array
          items:
            $ref: '#/components/schemas/apiInfo'
        tfaQuestion:
          type: array
          items:
            $ref: '#/components/schemas/tfaQuestion'

    tfaQuestion:
        description: Tfa question that must be answered by the user or an automated system.
        type: object
        properties:
          question:
            type: array
            items:
              $ref: '#/components/schemas/question'
          questionId:
            type: string
          questionType:
            type: string
            enum: [PAT_BIRTH_DATE, STUDY_DATE, PASSWORD, CUSTOM]
            description: |
              Format:
              * `PAT_BIRTH_DATE` - e.g. date from DICOM: Patient's Birth Date (0010,0030)
              * `STUDY_DATE` - e.g. date from DICOM: Study Date (0008,0020)
              * `PASSWORD` - e.g. an OTP oder TOTP as string
              * `CUSTOM` - any custom value which is not specified above
          answerFormat:
            type: string
            enum: [DATE, STRING]
            description: |
              Format:
              * `DATE` - date formated as YYYYMMDD
              * `STRING` - arbitrary string
        example:
          question: [{text: "Wann ist Ihr Geburtsdatum?",language: "de"}, {text: "What is your date of birth?",language: "en"}]
          questionId: 1
          questionType: PAT_BIRTH_DATE
          answerFormat: DATE

    question:
      description: Question, which is localizable (ISO 639).
      type: object
      required:
        - text
      properties:
        text:
          type: string 
        language:
          type: string # Language as ISO 639 language code (e.g. 'de', 'en' etc.)
      example:
        - text: Wann ist ihr Geburtsdatum?
          language: de
        - text: What is your date of birth?
          language: en

    tfaAnswers:
      description: List of tfa answers.
      type: object
      properties: 
        tfaAnswer:
          type: array
          items:
            $ref: '#/components/schemas/tfaAnswer'

    tfaAnswer:
      description: Tfa answer, referenced by its ID.
      type: object
      properties:
        questionId:
          type: string
        answer:
          type: string
      example:
        - questionId: 1
          answer: 19700101
        - questionId: 2
          answer: Dr. Bob

    dataItems:
      description: List of data items.
      type: object
      properties: 
        dataItem:
          type: array
          items:
            $ref: '#/components/schemas/dataItem'

    dataItem:
      description: A data item represents a single object for the given token. This could be a report in PDF format (application/pdf) or a single DICOM file (application/dicom). DICOM studies SHOULD ALWAYS be bundled as ZIP files conforming to the IHE PDI profile with the mimeType application/pdf. 
      type: object
      required:
        - id
        - mimeType
        - description
      properties:
        id:
          type: string
        mimeType:           # application/dicom, application/pdf, ...
          type: string
        description:        # DICOM: studyDescription (0008,1030)
          type: string
        studyInstanceUID:   # DICOM: studyInstanceUID (0020,000D)
          type: string
        date:               # DICOM: studyDate (0008,0020)
          type: string
          format: date
        modalities:         # DICOM: modality (0008,0060) resp. modalitiesâ€‹InStudy (0008,0061)
          type: string
        patientsName:       # DICOM: patientsName (0010,0010)
          type: string
        patientsBirthdate:  # DICOM: patientsBirthdate (0010,0030)
          type: string 
          format: date
        patientsSex:        # DICOM: patientsSex (0010,0040)
          type: string
        fileCount:          # number of files in a ZIP container
          type: integer
      example:
        - id: ee26fd29-fdcb-469d-a4f7-7c6de8607f71
          mimeType: application/pdf
          description: Radiological report
          date: 20240419
          patientsName: Mustermann,Max
          patientsBirthdate: 19700101
          patientsSex: M
        - id: 2de7773a-09df-46f1-98fb-9eeaaaeba802
          mimeType: application/zip
          description: DICOM Study as ZIP file
          studyInstanceUID: 1.2.276.0.23.60.1.2.14841915742092284318.1713520221786.0
          date: 20240419
          modalities: OT
          patientsName: Mustermann,Max
          patientsBirthdate: 19700101
          patientsSex: M
          fileCount: 3

    comebackLaterResponse:
      type: object
      nullable: true
      properties:
        timeOutInSeconds:
          type: integer
          minimum: 0
      example:
        timeOutInSeconds: 30

  responses:
    invalidCredentials:
      description: Invalid credentials provided - use /token and /tokentfa before.

    comebackLater:
      description: Server is busy. Try again later (status code 503).
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/comebackLaterResponse'

    invalidDataItemId:
      description: Study or report for the given ID is unknown.